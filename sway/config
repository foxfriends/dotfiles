# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulator
set $term 'kitty -1 tmux'
# Your preferred application launcher
# Note: it's recommended that you pass the final command to sway
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
# set $menu rofi -combi-modi window,drun -show combi -modi combi
set $menu 'rofi -combi-modi window,drun -show combi -modi combi,ssh'

set $nag exec swaynagmode

### Startup programs

# not sure why I have this one, but maybe it's good?
exec_always "systemctl --user import-environment"

exec mako
# needs a dbus-daemon for mako to work? is this really the right way to run it?
exec dbus-daemon --session --address=unix:path=$XDG_RUNTIME_DIR/bus

# start the audio
exec pulseaudio --daemonize

# this works, but I don't really like it that much
# exec ~/.config/sway/scripts/inactive-windows-transparency.py
exec "fish -lC flashfocus"
bindsym $mod+n exec "fish -lC nc_flash_window"

assign [class="obs" title="^Windowed Projector.*"] workspace ï€½
for_window [class="obs" title="^Windowed Projector.*"] fullscreen enable
for_window [class="Spotify"] floating enable, resize set width 1920 height 1080, border pixel 2

font pango:JetbrainsMono Nerd Font 12
focus_follows_mouse no
smart_borders on
smart_gaps off
gaps inner 16
gaps outer 0
default_border none
default_floating_border pixel 2

client.focused #ABB2BF #282C34 #ABB2BF #e5c07b #ABB2BF
client.unfocused #5C6370 #282C34 #ABB2BF #e5c07b #5C6370
client.focused_inactive #5C6370 #282C34 #ABB2BF #e5c07b #5C6370

### Output configuration
#
# Pick an image based on the day of the week
exec_always ~/.config/sway/scripts/background

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+1 exec firefox
    bindsym $mod+2 exec $term

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+p exec $menu
    bindsym $mod+Escape exec $menu
    bindsym $mod+o exec ~/.config/sway/scripts/findfile

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+r reload
    bindsym $mod+Shift+c exec grim -g "$(slurp -p)" -t ppm - | convert - -format '%[pixel:p{0,0}]' txt:- | tail -n 1 | cut -d ' ' -f 4 | wl-copy
    bindsym $mod+z border toggle

    bindsym $mod+Shift+q exec ~/.config/sway/scripts/shutdownmenu
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+F1 workspace 1
    bindsym $mod+F2 workspace 2
    bindsym $mod+F3 workspace 3
    bindsym $mod+F4 workspace 4
    bindsym $mod+F5 workspace 5
    bindsym $mod+F6 workspace 6
    bindsym $mod+F7 workspace 7
    bindsym $mod+F8 workspace 8
    bindsym $mod+F9 workspace 9
    bindsym $mod+F10 workspace 10
    bindsym $mod+F11 workspace 11
    bindsym $mod+F12 workspace 12
    # Move focused container to workspace
    bindsym $mod+Shift+F1 move container to workspace 1
    bindsym $mod+Shift+F2 move container to workspace 2
    bindsym $mod+Shift+F3 move container to workspace 3
    bindsym $mod+Shift+F4 move container to workspace 4
    bindsym $mod+Shift+F5 move container to workspace 5
    bindsym $mod+Shift+F6 move container to workspace 6
    bindsym $mod+Shift+F7 move container to workspace 7
    bindsym $mod+Shift+F8 move container to workspace 8
    bindsym $mod+Shift+F9 move container to workspace 9
    bindsym $mod+Shift+F10 move container to workspace 10
    bindsym $mod+Shift+F11 move container to workspace 11
    bindsym $mod+Shift+F12 move container to workspace 12
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    # bindsym $mod+s layout stacking
    # bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle; \
        [tiling con_id=__focused__] border none; \
        [floating con_id=__focused__] border pixel 2

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 16px
    bindsym $down resize grow height 16px
    bindsym $up resize shrink height 16px
    bindsym $right resize grow width 16px

    bindsym Shift+$left resize shrink width 64px
    bindsym Shift+$down resize grow height 64px
    bindsym Shift+$up resize shrink height 64px
    bindsym Shift+$right resize grow width 64px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 16px
    bindsym Down resize grow height 16px
    bindsym Up resize shrink height 16px
    bindsym Right resize grow width 16px

    bindsym Shift+Left resize shrink width 64px
    bindsym Shift+Down resize grow height 64px
    bindsym Shift+Up resize shrink height 64px
    bindsym Shift+Right resize grow width 64px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
#    position top
#    font JetBrainsMono Nerd Font 12
#
#    # When the status_command prints a new line to stdout, swaybar updates.
#    # The default just shows the current date and time.
#    status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
#
#    colors {
#        statusline #abb2bf
#        background #282c34
#        active_workspace #00000000 #3e4452 #abb2bf
#        inactive_workspace #00000000 #282c34 #abb2bf
#        focused_workspace #00000000 #3e4452 #abb2bf
#        focused_background #282c34
#        urgent_workspace #00000000 #282c34 #abb2bf
#        binding_mode #00000000 #282c34 #abb2bf
#    }
}

mode "nag" {
    bindsym {
        Ctrl+d mode "default"
        Ctrl+c $nag --exit
        q      $nag --exit
        Escape $nag --exit

        Return $nag --confirm
        $left  $nag --select prev
        $right $nag --select next
        Left   $nag --select prev
        Right  $nag --select next
    }
}

include /etc/sway/config.d/*
